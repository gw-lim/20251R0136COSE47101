import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_score
from sklearn.decomposition import PCA
import matplotlib.pyplot as plt
import matplotlib as mpl
import seaborn as sns

# ✅ 한글 폰트 설정
mpl.rc('font', family='Malgun Gothic')
mpl.rc('axes', unicode_minus=False)


# ✅ 중구 제외
df_no_junggu = df[df['자치구명'] != '중구'].copy()

# ✅ '자치구명'과 '범죄밀도' 제외
X_subset_no_junggu = df_no_junggu.drop(['자치구명', '범죄밀도'], axis=1)

# ✅ GVA와 조도 평균 정규화
columns_to_scale = ['GVA', '조도 평균(lux)']
scaler = StandardScaler()
X_subset_no_junggu[columns_to_scale] = scaler.fit_transform(X_subset_no_junggu[columns_to_scale])

# ✅ 최적의 K 탐색 (엘보우 & 실루엣)
inertia = []
silhouette_scores = []
K_range = range(2, 11)

for k in K_range:
    kmeans = KMeans(n_clusters=k, init='k-means++', random_state=42)
    cluster_labels = kmeans.fit_predict(X_subset_no_junggu)
    inertia.append(kmeans.inertia_)
    silhouette_avg = silhouette_score(X_subset_no_junggu, cluster_labels)
    silhouette_scores.append(silhouette_avg)

plt.figure(figsize=(12, 5))

plt.subplot(1, 2, 1)
plt.plot(K_range, inertia, marker='o')
plt.xlabel('Number of clusters (K)')
plt.ylabel('Inertia')
plt.title('Elbow Method (중구 제외)')

plt.subplot(1, 2, 2)
plt.plot(K_range, silhouette_scores, marker='o', color='green')
plt.xlabel('Number of clusters (K)')
plt.ylabel('Silhouette Score')
plt.title('Silhouette Score (중구 제외)')

plt.tight_layout()
plt.show()
